-- ##### CENTRAL RELATED CLASSES #####

class_chart CENTRAL_MAIN_MODEL
indexing
	in_cluster: "C_MODEL";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation
	"Responsible for business logic in central and for holding other classes in the model cluster"
query
	"What is the available municipalities?",
	"What is the available polling stations?",
	"What is the current voter filter?"
command
	"Replace the current voter filter with this voter filter",
	"Notify me when the number voters in the selection changes",
	"Notify me when the number of available municipalities changes",
	"Notify me when the number of available polling station changes"
end

class_chart VOTER_FILTER
indexing 
	in_cluster: "C_MODEL";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation
	"A filter describing a subset of voters."
query
	"What is the selected municipality?",
	"What is the selected polling station?",
	"What is the selected cprnr?"
command
	"N/A"
end

class_chart VOTER_CARD_GENERATOR
indexing
	in_cluster: "C_MODEL";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation 
	"Responsible for the generation of votercards"
query
	"What is the current number of generated voter cards?",
	"What is the current number of generated groups?",
	"What is the voter filter?"
command
	"Generate voter card(s) based on voter filter and grouping selection",
	"Notify me when the number of generated groups changes",
	"Notify me when the total number of generated voter cards changes"
constraint 
	"N/A"
end

class_chart VOTER_BOX_MANAGEMENT
indexing
	in_cluster: "C_MODEL";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-02";
	revised: "N/A"
explanation 
	"Responsible for the management of voter box(s)."
query
	"What is the console output?",
	"What is the current upload progress?",
	"What is the voter filter?"
command
	"Connect to this Voter Box.",
	"Validate content on the connected Voter Box.",
	"Upload voters to the connected Voter Box based on voter filter.",
	"Notify me when the current upload progress changes.",
	"Notify me when the console output changes."
constraint 
	"N/A"
end

class_chart VOTING_PLACE_DISTRIBUTION_SEC_REQ
indexing 
	in_cluster: "C_MODEL";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation
	"Responsible for the distributing of voter sets according to municpality or polling station"
query
	"Is the distribution finished?",
	"How are the voters distributed?"
command
	"Distribute among municipalities",
	"Distribute among polling stations"
constraint
	"N/A"
end

class_chart VOTER_SELECTION_WINDOW
explanation
	"The main window in the central that shows selection criteria."
query
	"N/A"
command
	"Open voter card window"
end

class_chart VOTER_CARD_WINDOW
indexing 
	in_cluster: "C_VIEW";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation 
	"Represents the visual part of the CENTRAL gui in connection to voter card generation."
query
	"N/A"
command	
	"Show a specific votercard"
constraint
	"N/A"
end

class_chart VOTER_BOX_MANAGEMENT_CONTROLLER_SEC_REQ
indexing 
	in_cluster: "C_CONTROLLER";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-02";
	revised: "N/A"
explanation
	"Responsible for reacting to GUI input from the VOTER_BOX_MANAGEMENT_WINDOW"
query
	"N/A"
command
	"React to connection request.",
	"React to validation request.",
	"React to upload request."
end

class_chart VOTER_SELECTION_CONTROLLER
indexing 
	in_cluster: "C_CONTROLLER";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation
	"Responsible for reacting to GUI input from the VOTER_SELECTION_WINDOW."
query
	"N/A"
command
	"React to municipality filter being changed",
	"React to polling station filter being changed", 
	"React to voter card search",
	"React to CPRNR search"
constraint
	"N/A"
end

class_chart VOTER_CARD_CONTROLLER
indexing
	in_cluster: "C_CONTROLLER";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation
	"Responsible for reacting to GUI input from the VOTER_CARD_WINDOW"
query
	"N/A"
command
	"React to generation request",
	"React to grouping selection"
end

class_chart CENTRAL_CONTROLLER
indexing
	in_cluster: "C_CONTROLLER";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation
	"Responsible for creating all central controllers."
end

-- ##### POLLING TABLE RELATED CLASSES ##### 

class_chart MODEL
indexing
	in_cluster: "POLLING_TABLE_PT";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-02";
	revised: "N/A"
explanation
	"The model class in PT. Responsible for connecting to, retriving from, and updating the DB"
query
	"What is the current voter?",
	"Has the current voter been registered?"
command
	"Vaidate connection",
	"Find a voter with this CPR NR.",
	"Register current voter",
	"Unregister current voter"
constraint
	"The can only be one distinct current voter at any given time"
end

class_chart SCANNER_WINDOW
indexing 
	in_cluster: "PT_VIEW";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation
	"This is where the election official scans or types in the voter card."
query
	"N/A"
command	
	"N/A"
constraint
	"The scanner window cannot be used while a voter window is open. Preventing two voters to register at the same time."
end

class_chart VOTER_WINDOW
indexing 
	in_cluster: "PT_VIEW";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation
	"A visual representation of the current voter at the polling table"
query
	"N/A"
command	
	"Show a specific voter",
	"Show an error message"
constraint
	"N/A"
end

class_chart SETUP_WINDOW
indexing 
	in_cluster: "PT_VIEW";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation
	"Window where the election official enters setup information"
query
	"N/A"
command	
	"N/A"
constraint
	"Must only be shown at startup"
end
	
class_chart CONTROLLER
indexing
	in_cluster: "POLLING_TABLE_PT";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-02";
	revised: "N/A"
explanation
	"Responsible for reacting to input from the GUI elements in the PT_VIEW"
query
	"N/A"
command
	"React to connect request",
	"React to find voter request",
	"React to register request",
	"React to unlock request"
constraint
	"N/A"
end

-- ##### DB_COMM_DAO RELATED CLASSES #####

class_chart DIGITAL_VOTER_LIST
indexing
	in_cluster: "DB_COMM_DAO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-07";
	revised: "2011-12-07";
explanation 
	"A class representing the database."
query
	"May I have a new DVL that uses this connection?",
	"May I have a new DVL that uses the default connection?",
	"May I have a reference to the voter table?",
	"May I have a reference to the polling station table?",
	"May I have a reference to the municipalities table?",
	"May I have a reference to the log table?"
command
	"N/A"
constraint
	"N/A"
end

class_chart DATA_ACCESS_OBJECT
indexing
	in_cluster: "DB_COMM_DAO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-29";
	revised: "2011-12-07";
explanation 
	"A data access object supporting CRUD operations."
query
	"Read the object(s) from the database for which this predicate holds."	
command
	"Create this object in the database.",
	"Create all these objects in the database",
	"Update the object(s) in the database for which this predicate holds.",
	"Delete the objects(s) in the database for which this predicate holds."
constraint
	"When inserting an element into the database, none of the element's fields must be null.",
	"A write operation followed by a read operation will return the object that was just written.",
	"After a call to delete, calling read with the same predicate will not return any results."
end

class_chart DATA_OBJECT
indexing
	in_cluster: "DB_COMM_DAO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-29";
	revised: "2011-12-07";
explanation 
	"The object used to transfer data between DAO and application."
query
	"Get data.",
	"Is this object fully initialized?"
command
	"Set data.",
	"Write any updated fields to the database.",
	"Delete this object from the database."
constraint
	"N/A"
end

class_chart PESSIMISTIC_VOTER_DAO
indexing
	in_cluster: "DB_COMM_DAO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "2011-12-07";
explanation
	"A pessimistic DAO implementation supporting explicit transaction control."
query
	"Give me the voter with this id.",
	"Is there an open transaction?"
command
	"Start transaction.",
	"Stop transaction.",
	"Update the voter with this id to the following.",
	"Delete the voter with this id.",
	"Insert this voter."
constraint
	"A transaction must be started before any other operations can be performed."
end

class_chart VOTER_DO
indexing
	in_cluster: "DATA_OBJECTS";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "2011-12-07";
explanation 
	"The object used to transfer voter data between DAO and application."
inherit DATA_OBJECT
end

class_chart POLLING_STATION_DO
indexing
	in_cluster: "DO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "2011-12-07";
explanation 
	"The object used to transfer polling station data between DAO and application."
inherit DATA_OBJECT
end

class_chart MUNICIPALITY_DO
indexing
	in_cluster: "DO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "2011-12-07";
explanation 
	"The object used to transfer municipality data between DAO and application."
inherit DATA_OBJECT
end

class_chart LOG_DO
indexing
	in_cluster: "DO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "2011-12-07";
explanation 
	"The object used to transfer log data between DAO and application."
inherit DATA_OBJECT
end

--Comment: Change Log

-- Updated to conform with implementation of DBComm (07/12).