class_chart VOTER_CARD_GENERATOR
indexing
	in_cluster: "C_MODEL";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation 
	"Responsible for the generation of votercards"
query
	"Have all the votercards been generated?",
	"Have a specific votercard been generated",
	"Have voter cards from a specific polling station been generated?",
	"Have voter cards from a specific municipality been created?"
command
	"Generate all voter cards",
	"Generate a specific voter card",
	"Generate voter cards for a specific polling station",
	"Generate voter cards for a specific municipality"
constraint 
	"A voter card must be unique",
	"The same voter card must only be generated once in every batch."
end

class_chart VOTING_PLACE_DISTRIBUTION_SEC_REQ
indexing 
	in_cluster: "C_MODEL";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation
	"Responsible for the distributing of voter sets according to municpality or polling station"
query
	"Is the distribution finished?",
	"How are the voters distributed?"
command
	"Distribute among municipalities",
	"Distribute among polling stations"
constraint
	"N/A"
end

class_chart VOTER_CARD_WINDOW
indexing 
	in_cluster: "C_VIEW";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation 
	"Represents the visual part of the CENTRAL gui in connection to voter card generation."
query
	"NONE"
command	
	"Show a specific votercard"
constraint
	"NONE"
end

class_chart REG_WINDOW
indexing 
	in_cluster: "PT_VIEW";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation
	"A visual represention of a registration"
query
	"NONE"
command	
	"Show a specific registration"
constraint
	"?"
end

class_chart VOTER_WINDOW
indexing 
	in_cluster: "PT_VIEW";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-28";
	revised: "N/A"
explanation
	"A visual representation of a voter at the polling table"
query
	"NONE"
command	
	"Show a specific voter",
	"Show an error message"
constraint
	"?"
end

class_chart DATA_ACCESS_OBJECT
indexing
	in_cluster: "DB_COMM_DAO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-29";
	revised: "N/A"
explanation 
	"A data access object supporting CRUD operations."
query
	"Read the object(s) from the database for which this predicate holds."	
command
	"Create this object in the database.",
	"Update the object(s) in the database for which this predicate holds.",
	"Delete the objects(s) in the database for which this predicate holds."
constraint
	"N/A"
end

class_chart DATA_OBJECT
indexing
	in_cluster: "DB_COMM_DAO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-11-29";
	revised: "N/A"
explanation 
	"The object used to transfer data between DAO and application."
query
	"Get data."
command
	"Set data.",
	"Write any updated fields to the database.",
	"Delete this object from the database."
constraint
	"N/A"
end

class_chart PESSIMISTIC_VOTER_DAO
indexing
	in_cluster: "DB_COMM_DAO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation
	"A pessimistic DAO implementation supporting explicit transaction control."
query
	"Give me the voter with this id.",
	"Is there an open transaction?"
command
	"Start transaction.",
	"Stop transaction.",
	"Update the voter with this id to the following.",
	"Delete the voter with this id."
	"Insert this voter."
end

class_chart VOTER_DO
indexing
	in_cluster: "DATA_OBJECTS";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation 
	"The object used to transfer voter data between DAO and application."
inherit DATA_OBJECT
query
	"What is the name of the voter?",
	"What is the address of the voter?",
	"What is the CPRNR of the voter?",
	"Has a voter card been printed for the voter?",
	"Has the voter voted?"
command	
	"Set a status to votercard printed",
	"Set voter to have voted"
constraint
	"?"
end

class_chart POLLING_STATION_DO
indexing
	in_cluster: "DO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation 
	"The object used to transfer polling station data between DAO and application."
inherit DATA_OBJECT
query
	"What is the address",
	"What is the ID?",
	"What is your name?"
command
	"N/A"
constraint
	"N/A"
end

class_chart MUNICIPALITY_DO
indexing
	in_cluster: "DO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation 
	"The object used to transfer municipality data between DAO and application."
inherit DATA_OBJECT
query
	"What is the address",
	"What is the ID?",
	"What is your name?"
command
	"N/A"
constraint
	"N/A"
end

class_chart LOG_DO
indexing
	in_cluster: "DO";
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk";
	created: "2011-12-01";
	revised: "N/A"
explanation 
	"The object used to transfer log data between DAO and application."
inherit DATA_OBJECT
query
	"Is there an entry for a specific voter?",
	"Is there a write entry for a specific voter?",
	"Is there a read entry for a specific voter?"

end

--Comment: Change Log






