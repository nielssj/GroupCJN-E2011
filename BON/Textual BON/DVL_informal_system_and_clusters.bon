system_chart DIGITAL_VOTER_SYSTEM
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "Our system is based on how voters are registered at polling stations today. Today all voters are registered in books at the polling stations. When a voter want to vote at a polling station he hands in his polling card and his name is looked up in one of these books.The name is marked in the book, and he is handed a ballot. It is not possible to register twice.\ 
\The aim of our system is to make the current paper-based process (looking into a paper based book) into a digital process where the system will handle the task of registering a voter using his voting card at a given polling place. \
\When a voter has been authenticated, registered and handed his ballot, the job of the system is finished. This means that the system does NOT have anything to do with registering which party a voter has voted for (e-voting), it ONLY manages voter lists, and ensures that a voter may only vote once."
cluster POLLING_TABLE_PT
description
  "The table where voters register."
cluster CENTRAL_C
description
	"The admin module located at the Home office"
cluster DB_COMM
description 
	 "The classes and clusters needed for a home-built DAO."
end

-- ##### Polling table related clusters #####

cluster_chart POLLING_TABLE_PT
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "The polling table is a client located at every polling table at the polling station. It is responsible for registering voter cards and communicating with the voter box."
class MODEL
description 
	"The model class in PT. Responsible for connecting to, retriving from, and updating the DB"
class SETUP_INFO
description 
	"Contains setup related information for polling table"
class POLLING_MAIN
description
	"Responsible for creating the polling table MVC main classes."
class CONTROLLER
description 
	"Responsible for reacting to input from the GUI elements in the PT_VIEW"
cluster PT_VIEW
description 
	"Responsible for GUI elements at the polling table"
cluster LOG
description
	"Responsible for the log window."
end

cluster_chart PT_VIEW
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "Responsible for GUI elements at the polling table"
class SCANNER_WINDOW
description 
	"The main window at the polling station. Used when scanning voter cards."
class NORMAL_VOTER_WINDOW
description 
	"A visual representation of the current voter at the polling table where the user can register the voter"
class WARNING_VOTER_WINDOW
description
	"A visual representation of the current voter at the polling table that shows a warning if the voter is already registered."
class UNREGISTER_VOTER_WINDOW
description
	"A visual representation of the current voter at the polling table that lets the user unregister a voter."
class SETUP_WINDOW
description
	"Window where the election official enters setup information"
class POLLING_TABLE_VIEW
description 
	"Responsible for GUI elements in polling table"
end

cluster_chart LOG
indexing
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
	"Responsible for the log window"
class LOG_CONTROLLER
description
	"Responsible for reacting to the user's clicks and periodically updating the underlying model."
class LOG_MODEL
description
	"Responsible for storing and updating log data."
class LOG_VIEW
description
	"Responsible for showing the data to the user and allowing him to interact with it."
class LOG_FILTER
description
	"A utility class to allows sending all data about the users log selection."
end

-- ##### Central related clusters #####

cluster_chart CENTRAL_C
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "The Central application is responsible for generating voter cards and uploading subsets of voters to voter boxes."
cluster C_MODELS
description 
	"Responsible for creating and managing instances of the sub-models."
 cluster C_VIEWS
description 
	"Responsible for creating instances of the sub-views."
cluster C_CONTROLLERS
description 
	"Responsible for creating instances of the sub-views."
end

cluster_chart C_MODELS
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "Responsible for the logic in central."
class CENTRAL_MODEL
description
	"The main 'model' of the application. Responsible of creating and managing instances of the sub-models."
class VOTER_SELECTOR
description
	"Selects a subset of voters based on various parameters. The selection itself is represented as a VOTER_FILTER."
class VOTER_CARD_GENERATOR
description
	"Generates voter cards for a subset of voters based on a VOTER_FILTER."
class VOTER_BOX_MANAGER
description
	"Uploads voters to a specified VoterBox based on a VOTER_FILTER."
class SERVER_SETUP
description
	"A class responsible for persisting server login information provided by the user in the SERVER_SETUP_WINDOW."
class VOTER_FILTER
description
	"A filter describing a subset of voters chosen by VOTER_SELECTOR."
end

cluster_chart C_VIEWS
indexing
    author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
   "Responsible for GUI elements at the central."
class CENTRAL_VIEW
description
	"The main 'view' of the application. It has the sole responsibility of creating instances of the sub-views (windows forms)."
class VOTER_SELECTOR_WINDOW
description	
	"Window for representing and manipulating the VOTER_BOX_SELECTOR"
class VOTER_BOX_MANAGER_WINDOW
description
	"Window for representing and manipulating a VOTER_BOX_MANAGER"
class VOTER_CARD_GENERATOR_WINDOW
description
	"Window for representing and manipulating a VOTER_CARD_GENERATOR"
class SERVER_SETUP_WINDOW
description
	"Window for taking input to the SERVER_SETUP."
end

cluster_chart C_CONTROLLERS
indexing
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
	"Responsible for reacting to input from the GUI elements in the central."
class CENTRAL_CONTROLLER
description
	"The main 'controller' of the application. It has the sole responsibility of creating instances of the sub-controllers."
class VOTER_SELECTOR_CONTROLLER
description
	"Responsible for reacting to user input from the VOTER_SELECTOR_WINDOW."
class VOTER_CARD_GENERATOR_CONTROLLER
description
	"Responsible for reacting to user input from the VOTER_CARD_GENERATOR_WINDOW"
class VOTER_BOX_MANAGER_CONTROLLER
description
	"Responsible for reacting to user input from the VOTER_BOX_MANAGER_WINDOW"
class SERVER_SETUP_CONTROLLER
description
	"Responsible for reacting to user input in the SERVER_SETUP_WINDOW."
end

-- DB COMM related clusters #####

cluster_chart DB_COMM
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "The classes and clusters needed for a home-built DAO."
class DIGITAL_VOTER_LIST
description
	"A class representing the database."
 cluster DATA_ACCESS_OBJECTS
description
	"All DAO classes and interfaces."
cluster DATA_OBJECTS
description
	"All classes and interfaces representing entities in the database."
end

cluster_chart DATA_OBJECTS
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "All classes and interfaces representing entities in the database."
class DATA_OBJECT
description	
	"The object used to transfer data between the DAO and the application."
class VOTER_DO
description
	"The class describing a voter entity."
class POLLING_STATION_DO
description
	"The class describing a polling station entity."
class MUNICIPALITY_DO
description
	"The class describing a municipality entity."
class LOG_DO
description
	"The class describing a log entity."
class ACTIVITY
description
	"An enumeration of various log activities."
end

cluster_chart DATA_ACCESS_OBJECTS
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "All DAO classes and interfaces."
class DATA_ACCESS_OBJECT
description	
	"An interface describing the overall actions that a DAO should support."
class VOTER_DAO
description
	"A class for working CRUD operations on voter entities"
class POLLING_STATION_DAO
description
	"A class for working CRUD operations on polling station entities"
class MUNICIPALITY_DAO
description
	"A class for working CRUD operations on municipality entities"
class LOG_DAO
description
	"A class for working CRUD operations on log entities"
class PESSIMISTIC_VOTER_DAO
description
	"A DAO that uses pessimistic concurrency control to access voter entities."
end

--Comment: Change Log

-- Find a better name for pessimistic voter DAO
-- Updated to conform with the current design of DBComm (07/12)