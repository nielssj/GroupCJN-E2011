system_chart DIGITAL_VOTER_SYSTEM
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "Our system is based on how voters are registered at polling stations today. Today all voters are registered in books at the polling stations. When a voter want to vote at a polling station he hands in his polling card and his name is looked up in one of these books.The name is marked in the book, and he is handed a ballot. It is not possible to register twice.\ 
\The aim of our system is to make the current paper-based process (looking into a paper based book) into a digital process where the system will handle the task of registering a voter using his voting card at a given polling place. \
\When a voter has been authenticated, registered and handed his ballot, the job of the system is finished. This means that the system does NOT have anything to do with registering which party a voter has voted for (e-voting), it ONLY manages voter lists, and ensures that a voter may only vote once."
cluster POLLING_TABLE_PT
description
  "The table where voters register."
cluster CENTRAL_C
description
	"The admin module located at the Home office"
cluster DB_COMM
description 
	 "The classes and clusters needed for a home-built DAO."
end

-- ##### Polling table related clusters #####

cluster_chart POLLING_TABLE_PT
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "The polling table is a client located at every polling table at the polling station. It is responsible for registering voter cards and communicating with the voter box."
class MODEL
description 
	"The model class in PT. Responsible for connecting to, retriving from, and updating the DB"
class CONTROLLER
description 
	"Responsible for reacting to input from the GUI elements in the PT_VIEW"
cluster PT_VIEW
description 
	  "Responsible for creating GUI elements at the polling table"
end

cluster_chart PT_VIEW
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "Responsible for GUI elements at the polling table"
class SCANNER_WINDOW
description 
	"The main window at the polling station. Used when scanning voter cards."
class VOTER_WINDOW
description 
	"A visual representation of a voter"
class SETUP_WINDOW
description
	"Window where the election official enters setup information"
end

-- ##### Central related clusters #####

cluster_chart CENTRAL_C
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "The central module is responsible for generating voter cards and uploading data to voter boxes."
cluster C_VIEW
description 
	"Responsible for creating GUI elements at the central."
cluster C_CONTROLLER
description 
	"Responsible for reacting to input from the GUI elements at the central. "
cluster C_MODEL
description 
	"Responsible for business logic in the central."
end

cluster_chart C_MODEL
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "Responsible for the logic in central."
class CENTRAL_MAIN_MODEL
description
	"Holds all other model class in the central model."
class VOTER_CARD_GENERATOR
description
	"Responsible for the generation of votercards"
class VOTER_BOX_MANAGEMENT
description
	"Responsible for uploading the right set of voters to the right voter box"
class VOTER_FILTER
description
	"A filter describing a subset of voters chosen in the VOTER_SELECTION_WINDOW."
class VOTING_PLACE_DISTRIBUTION_SEC_REQ
description
	"Responsible for the distributing of voter sets according to municpality or polling station"
end

cluster_chart C_VIEW
indexing
    author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
   "Responsible for GUI elements at the central."
class VOTER_BOX_MANAGEMENT_WINDOW_SEC_REQ
description
	"Window to manage voterboxes"
class VOTER_SELECTION_WINDOW
description	
	"Window used when selecting a subset to be uploaded to a voter box"
class VOTER_CARD_WINDOW
description
	"Window where voter card generation is handled"
end

cluster_chart C_CONTROLLER
indexing
	author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
	"Responsible for reacting to input from the GUI elements in the central."
class CENTRAL_CONTROLLER
description
	"Responsible for creating all central controllers."
class VOTER_SELECTION_CONTROLLER
description
	"Responsible for reacting to GUI input from the VOTER_SELECTION_WINDOW."
class VOTER_CARD_CONTROLLER
description
	"Responsible for reacting to GUI input from the VOTER_CARD_WINDOW"
class VOTER_BOX_MANAGEMENT_CONTROLLER_SEC_REQ
description
	"Responsible for reacting to GUI input from the VOTER_BOX_MANAGEMENT_WINDOW"
end

-- DB COMM related clusters #####

cluster_chart DB_COMM
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "The classes and clusters needed for a home-built DAO."
cluster DAO
description
	"All DAO classes and interfaces."
cluster DO
description
	"All classes and interfaces representing entities in the database."
end

cluster_chart DO
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "All classes and interfaces representing entities in the database."
class DATA_OBJECT
description	
	"The object used to transfer data between the DAO and the application."
class VOTER_DO
description
	"The class describing a voter entity."
class POLLING_STATION_DO
description
	"The class describing a polling station entity."
class MUNICIPALITY_DO
description
	"The class describing a municipality entity."
class LOG_DO
description
	"The class describing a log entity."
end

cluster_chart DAO
indexing
  author: "Claes Martinsen - clae@itu.dk, Jan Meier - jmei@itu.dk, Niels Søholm - nmar@itu.dk;"
explanation
  "All DAO classes and interfaces."
class DATA_ACCESS_OBJECT
description	
	"An interface describing the overall actions that a DAO should support."
class VOTER_DAO
description
	"A class for working CRUD operations on voter entities"
class POLLING_STATION_DAO
description
	"A class for working CRUD operations on polling station entities"
class MUNICIPALITY_DAO
description
	"A class for working CRUD operations on municipality entities"
class LOG_DAO
description
	"A class for working CRUD operations on log entities"
end

--Comment: Change Log






