// <copyright file="VoterDOTest.Constructor01.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace DBComm.DBComm.DO
{
    public partial class VoterDOTest
    {
[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void Constructor01389()
{
    VoterDO voterDO;
    voterDO = this.Constructor01();
    Assert.IsNotNull((object)voterDO);
    Assert.IsNull((object)(voterDO.PrimaryKey));
    Assert.IsNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNull((object)(voterDO.CardPrinted));
    Assert.IsNull((object)(voterDO.Voted));
}
[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void Constructor327()
{
    VoterDO voterDO;
    voterDO = this.Constructor
                  (0u, 101008193u, (string)null, (string)null, (string)null, false, false);
    Assert.IsNotNull((object)voterDO);
    Assert.IsNotNull((object)(voterDO.PrimaryKey));
    Assert.AreEqual<uint>(101008193u, (uint)((object)(voterDO.PrimaryKey)));
    Assert.IsNotNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<uint>(0u, (uint)((object)(voterDO.PollingStationId)));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNotNull((object)(voterDO.CardPrinted));
    Assert.AreEqual<bool>(false, (bool)((object)(voterDO.CardPrinted)));
    Assert.IsNotNull((object)(voterDO.Voted));
    Assert.AreEqual<bool>(false, (bool)((object)(voterDO.Voted)));
}
[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException232()
{
    try
    {
      VoterDO voterDO;
      voterDO = this.Constructor
                    (0u, 0u, (string)null, (string)null, (string)null, false, false);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
